#!/usr/bin/env bash
#
# Author: SharkWipf
#
# Copy this file to /etc/libvirt/hooks, make sure it's called "qemu".
# After this file is installed, restart libvirt.
# From now on, you can easily add per-guest qemu hooks.
# Add your hooks in /etc/libvirt/hooks/qemu.d/vm_name/hook_name/state_name.
# For a list of available hooks, please refer to https://www.libvirt.org/hooks.html
#

GUEST_NAME="$1"
HOOK_NAME="$2"
STATE_NAME="$3"
MISC="${@:4}"

BASEDIR="$(dirname $0)"

HOOKPATH="$BASEDIR/qemu.d/$GUEST_NAME/$HOOK_NAME/$STATE_NAME"

set -e # If a script exits with an error, we should as well.

# check if it's a non-empty executable file
if [ -f "$HOOKPATH" ] && [ -s "$HOOKPATH" ] && [ -x "$HOOKPATH" ]; then
    eval \"$HOOKPATH\" "$@"
elif [ -d "$HOOKPATH" ]; then
    while read file; do
        # check for null string
        if [ ! -z "$file" ]; then
          eval \"$file\" "$@"
        fi
    done <<< "$(find -L "$HOOKPATH" -maxdepth 1 -type f -executable -print;)"
fi


# IMPORTANT: Change the "VM NAME" string to match your actual VM Name.
# In order to create rules to other VMs, just duplicate the below block and configure
# it accordingly.

if [ "${1}" = "win10" ]; then

   # Update the following variables to fit your setup
   HOST_IP=""
   HOST_PORT=""
   GUEST_IP=""
   GUEST_PORT=""

   if [ "${2}" = "stopped" ] || [ "${2}" = "reconnect" ]; then
    # Delete rule to accept traffic to virbr0 that is TCP to $GUEST_IP:$GUEST_PORT (will drop)
    /sbin/iptables -D FORWARD -o virbr0 -p tcp \
            -d $GUEST_IP --dport $GUEST_PORT \
            -j ACCEPT

    # Delete rule to rereoute traffic to $HOST_IP:$HOST_PORT to $GUEST_IP:$GUEST_PORT
    /sbin/iptables -t nat -D PREROUTING -p tcp \
            --dport $HOST_PORT \
            -j DNAT \
            --to-destination $GUEST_IP:$GUEST_PORT
   fi
   if [ "${2}" = "start" ] || [ "${2}" = "reconnect" ]; then
    # Insert rule to forward traffic to virbr0 that is TCP to $GUEST_IP:$GUEST_PORT
    # (otherwise dropped since HOST_IP != GUEST_IP)
    /sbin/iptables -I FORWARD -o virbr0 -p tcp \
            -d $GUEST_IP --dport $GUEST_PORT \
            -j ACCEPT

    # Insert rule to rereoute traffic to $HOST_IP:$HOST_PORT to $GUEST_IP:$GUEST_PORT
    /sbin/iptables -t nat -I PREROUTING -p tcp \
            -d $HOST_IP --dport $HOST_PORT \
            -j DNAT \
            --to-destination $GUEST_IP:$GUEST_PORT
   fi
fi
